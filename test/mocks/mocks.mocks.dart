// Mocks generated by Mockito 5.4.5 from annotations
// in escooter_notes_app/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:appwrite/models.dart' as _i2;
import 'package:escooter_notes_app/data/security.dart' as _i9;
import 'package:escooter_notes_app/models/notes_model.dart' as _i7;
import 'package:escooter_notes_app/repositories/authentication_repository.dart'
    as _i3;
import 'package:escooter_notes_app/repositories/notes_repository.dart' as _i6;
import 'package:escooter_notes_app/repositories/user_repository.dart' as _i5;
import 'package:escooter_notes_app/utils/connectivity/connectivity.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDocument_1 extends _i1.SmartFake implements _i2.Document {
  _FakeDocument_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthenticationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationRepository extends _i1.Mock
    implements _i3.AuthenticationRepository {
  MockAuthenticationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> login(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#login, [email, password]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.User> createAccount(
    String? email,
    String? password,
    String? name,
    String? phone,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createAccount, [email, password, name, phone]),
            returnValue: _i4.Future<_i2.User>.value(
              _FakeUser_0(
                this,
                Invocation.method(#createAccount, [
                  email,
                  password,
                  name,
                  phone,
                ]),
              ),
            ),
          )
          as _i4.Future<_i2.User>);

  @override
  _i4.Future<_i2.User> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i4.Future<_i2.User>.value(
              _FakeUser_0(this, Invocation.method(#getCurrentUser, [])),
            ),
          )
          as _i4.Future<_i2.User>);

  @override
  _i4.Future<void> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<bool> isLoggedIn() =>
      (super.noSuchMethod(
            Invocation.method(#isLoggedIn, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<void> sendVerificationEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendVerificationEmail, [email]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> verifyOtp(String? otp) =>
      (super.noSuchMethod(
            Invocation.method(#verifyOtp, [otp]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<bool> resendOtp() =>
      (super.noSuchMethod(
            Invocation.method(#resendOtp, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i5.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Document> createUser({
    required String? userId,
    required String? email,
    String? name,
    Map<String, dynamic>? additionalData,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUser, [], {
              #userId: userId,
              #email: email,
              #name: name,
              #additionalData: additionalData,
            }),
            returnValue: _i4.Future<_i2.Document>.value(
              _FakeDocument_1(
                this,
                Invocation.method(#createUser, [], {
                  #userId: userId,
                  #email: email,
                  #name: name,
                  #additionalData: additionalData,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Document>);

  @override
  _i4.Future<_i2.Document> getUserData(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserData, [userId]),
            returnValue: _i4.Future<_i2.Document>.value(
              _FakeDocument_1(this, Invocation.method(#getUserData, [userId])),
            ),
          )
          as _i4.Future<_i2.Document>);

  @override
  _i4.Future<void> updateUserProfile(
    String? userId,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserProfile, [userId, data]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [NotesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotesRepository extends _i1.Mock implements _i6.NotesRepository {
  MockNotesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i7.Note>> getNotesFromDatabase() =>
      (super.noSuchMethod(
            Invocation.method(#getNotesFromDatabase, []),
            returnValue: _i4.Future<List<_i7.Note>>.value(<_i7.Note>[]),
          )
          as _i4.Future<List<_i7.Note>>);

  @override
  _i4.Future<_i2.Document?> createNote(_i7.Note? note) =>
      (super.noSuchMethod(
            Invocation.method(#createNote, [note]),
            returnValue: _i4.Future<_i2.Document?>.value(),
          )
          as _i4.Future<_i2.Document?>);

  @override
  _i4.Future<void> updateNote(_i7.Note? note) =>
      (super.noSuchMethod(
            Invocation.method(#updateNote, [note]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> deleteNote(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteNote, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i2.Document?> getNoteById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getNoteById, [id]),
            returnValue: _i4.Future<_i2.Document?>.value(),
          )
          as _i4.Future<_i2.Document?>);
}

/// A class which mocks [ConnectivityChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityChecker extends _i1.Mock
    implements _i8.ConnectivityChecker {
  MockConnectivityChecker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> hasInternet() =>
      (super.noSuchMethod(
            Invocation.method(#hasInternet, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}

/// A class which mocks [SecureStorageInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageInterface extends _i1.Mock
    implements _i9.SecureStorageInterface {
  MockSecureStorageInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> writeSecureData(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#writeSecureData, [key, value]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String> readSecureData(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#readSecureData, [key]),
            returnValue: _i4.Future<String>.value(
              _i10.dummyValue<String>(
                this,
                Invocation.method(#readSecureData, [key]),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<void> deleteAll() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAll, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
